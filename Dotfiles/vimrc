" make vim more useful
set nocompatible

" neobundle
if has('vim_starting')
	set runtimepath+=~/.vim/bundle/neobundle.vim/
endif
call neobundle#rc(expand('~/.vim/bundle/'))
NeoBundleFetch 'Shougo/neobundle.vim'

NeoBundle 'tComment'
NeoBundle 'delimitMate.vim'
NeoBundle 'Syntastic'
NeoBundle 'airblade/vim-gitgutter'
NeoBundle 'Shougo/vimfiler.vim'
NeoBundle 'Shougo/unite.vim'
NeoBundle 'Shougo/vimproc', {
	\ 'build': {
	\		'mac': 'make -f make_mac.mak',
	\		'unix': 'make -f make_unix.mak',
	\		},
	\ }

" syntaxes
if system("uname")=="Darwin\n"
	NeoBundle 'sophacles/vim-processing'
	NeoBundle 'tikhomirov/vim-glsl'
	NeoBundle 'sudar/vim-arduino-syntax'
	NeoBundle 'briancollins/vim-jst'

	au BufNewFile,BufRead *.tpl set filetype=jst
endif

" disable startup message
set shortmess+=I

" syntax coloring
syntax enable
filetype plugin indent on

" encoding
set encoding=utf-8
set fileencodings=utf-8

" indentation
set tabstop=2
set shiftwidth=2
set softtabstop=2
set smartindent

" additional settings
set backspace=indent,eol,start
set number
set linebreak
set ruler
set scrolloff=5

" show cmd and current mode
set showcmd
set showmode

" open new buffers always in new tabs
set switchbuf=usetab,newtab

" centralize backups, swapfiles and undo history
set backupdir=~/.vim/backups
set directory=~/.vim/swaps
if exists("&undodir")
  set undodir=~/.vim/undo
endif

" highlight searches
set hlsearch
" ignore case of searches
set ignorecase
" don't ignore case if character is upper
set smartcase
" highlight dynamically as pattern is typed
set incsearch

" status line
set statusline=%<%f\ %h%m%r%=%-14.(%l,%c%V%)\ %P
set laststatus=2
" set noru

" disable split char
set fillchars+=vert:\ 

" default color theme
colorscheme Tomorrow-Night-Mine

" tComment settings
vmap gcc gc

" unite settings
nnoremap <C-p> :Unite -buffer-name=files -start-insert file_rec/async<cr>
if executable('ag')
	let g:unite_source_grep_command = 'ag'
	let g:unite_source_grep_default_opts = '--nogroup --nocolor --column'
	let g:unite_source_grep_recursive_opt = ''
	nnoremap <C-g> :Unite -start-insert grep:.<cr>
endif

" syntastic settings
let g:syntastic_check_on_open=1
let g:syntastic_error_symbol='!'
let g:syntastic_warning_symbol='?'
let g:syntastic_style_error_symbol='!'
let g:syntastic_style_warning_symbol='?'

" vimfiler settings
let g:vimfiler_as_default_explorer=1
let g:vimfiler_directory_display_top=1
let g:vimfiler_tree_leaf_icon = ' '
let g:vimfiler_tree_opened_icon = '▾'
let g:vimfiler_tree_closed_icon = '▸'
let g:vimfiler_file_icon = ' '
let g:vimfiler_marked_file_icon = '*'
nnoremap <C-n> :VimFilerExplorer<cr>

" os specific settings
if has("unix")
	let s:uname=system("uname")
	if s:uname=="Darwin\n"
		" set jslint config file on mac
		let g:syntastic_javascript_jsl_conf="/Users/Szymon/Dropbox/Code/Dotfiles/jsl.conf"
	endif
endif

" kills trailing whitespaces
command! KillWhitespace :normal :%s/ *$//g<cr><c-o><cr>

